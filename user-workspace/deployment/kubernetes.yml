apiVersion: v1
kind: Namespace
metadata:
  name: work-production

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: work-production
data:
  DEBUG: "false"
  DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/workproduction"
  REDIS_URL: "redis://redis:6379/0"

---
apiVersion: v1
kind: Secret
metadata:
  name: app-secrets
  namespace: work-production
type: Opaque
data:
  # Base64 encoded secrets - replace with actual values
  MS_CLIENT_ID: ""
  MS_CLIENT_SECRET: ""
  GOOGLE_CLIENT_ID: ""
  GOOGLE_CLIENT_SECRET: ""
  OPENAI_API_KEY: ""
  POSTGRES_PASSWORD: ""

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: work-production
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - name: api
        image: work-production-ai:latest
        ports:
        - containerPort: 8000
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secrets
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-worker
  namespace: work-production
spec:
  replicas: 2
  selector:
    matchLabels:
      app: celery-worker
  template:
    metadata:
      labels:
        app: celery-worker
    spec:
      containers:
      - name: celery-worker
        image: work-production-ai:latest
        command: ["celery", "-A", "app.tasks", "worker", "--loglevel=info"]
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secrets
        resources:
          requests:
            cpu: "200m"
            memory: "512Mi"
          limits:
            cpu: "1000m"
            memory: "1Gi"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-beat
  namespace: work-production
spec:
  replicas: 1
  selector:
    matchLabels:
      app: celery-beat
  template:
    metadata:
      labels:
        app: celery-beat
    spec:
      containers:
      - name: celery-beat
        image: work-production-ai:latest
        command: ["celery", "-A", "app.tasks", "beat", "--loglevel=info"]
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secrets
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "300m"
            memory: "512Mi"

---
apiVersion: v1
kind: Service
metadata:
  name: api
  namespace: work-production
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 8000
  selector:
    app: api

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-ingress
  namespace: work-production
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
  - hosts:
    - api.workproduction.ai
    secretName: api-tls
  rules:
  - host: api.workproduction.ai
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: api
            port:
              number: 80

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: api-hpa
  namespace: work-production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: api-pdb
  namespace: work-production
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: api
